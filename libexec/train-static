#!/bin/bash

#/ NAME
#/     train static - implements static provider for boxcar

# figure out the project root under which bin, lib live
shome="$(cd -P -- "$(dirname -- "$BASH_SOURCE")/.." && pwd -P)"

# load a jason bourne library
source "$shome/libexec/_jason"
require boxcar
require boxcar_opt

DEFINE_string 'vprovider' 'static' 'Vagrant provider'

function until_vagrant {
  true
}

function instance_status {
  if [[ ! -f "$FLAGS_release_dir/.vagrant/machines/default/${FLAGS_vprovider}/id" ]]; then
    echo "null"
  else 
    echo "running"
  fi
}

function conf_vagrant {
  local nm_box="$1"; shift

  local tmp_dna="$(mktemp -t XXXXXXXXX)"

  cat > "$tmp_dna" <<EOF
  { 
    "run_list": ["vagrant::${FLAGS_vprovider}"], 
    "vagrant": { 
      "box": "${nm_box}",
      "release_dir": "$FLAGS_release_dir",
      "ssh_username": "$FLAGS_username",
      "image": "$FLAGS_address"
    }
  }
EOF
  cat $tmp_dna
  $shome/bin/cook -j "$tmp_dna"
  rm -f "$tmp_dna"
}

function build_keypair {
  true
}

function delete_keypair {
  true
}

function early_termination {
  true
} 

function bundle_vagrant {
  if [[ -z "$FLAGS_output" ]]; then
    return 0
  fi

  local base_image="$(basename $FLAGS_output .box | perl -pe 's{:(\w+)}{\($1\)}g')"
  local id_instance="$(cat $FLAGS_release_dir/.vagrant/machines/default/${FLAGS_vprovider}/id)"

  logger_info "creating image ${base_image} from address $id_instance"

  local id_image="$FLAGS_address"

  (cd $FLAGS_release_dir && vagrant destroy -f)

  local tmp_metadata="$(mktemp -d -t XXXXXXXXX)"
  cat > "$tmp_metadata/metadata.json" << __EOF
  {
        "provider": "${FLAGS_vprovider}"
  }
__EOF
  cat > "$tmp_metadata/Vagrantfile" << __EOF
  Vagrant.configure("2") do |config|
    config.vm.provider :${FLAGS_vprovider} do |${FLAGS_vprovider}, override|
      ${FLAGS_vprovider}.image = "$id_image"
      override.vm.synced_folder ".", "/vagrant", :id => "vagrant-root", :disabled => true
    end
  end
__EOF
  rm -f "$FLAGS_output"
  tar cvfz "$FLAGS_output" -C "$tmp_metadata" metadata.json Vagrantfile
  rm -rf "$tmp_metadata"
} 

function demo_vagrant {
  local nm_keypair="$1"; shift
  local nm_box="$1"; shift

  conf_vagrant "$nm_box"
  (cd $FLAGS_release_dir && vagrant up --provider ${FLAGS_vprovider})
  until_vagrant "true"
  local id_instance="$(cat $FLAGS_release_dir/.vagrant/machines/default/${FLAGS_vprovider}/id)"
  until_port_open "$FLAGS_address" 22
  demo_in_vagrant "$@"
}

function forwarded_ssh_port {
  echo "22"
}

# entry point
function main {
  cd $shome
  time build_vagrant "$@"
}

require sub "$BASH_SOURCE" "$@"
